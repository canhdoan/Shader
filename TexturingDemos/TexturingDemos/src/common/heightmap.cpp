///////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2010 AsNet Co., Ltd.
// All Rights Reserved. These instructions, statements, computer
// programs, and/or related material (collectively, the "Source")
// contain unpublished information proprietary to AsNet Co., Ltd
// which is protected by US federal copyright law and by 
// international treaties. This Source may NOT be disclosed to 
// third parties, or be copied or duplicated, in whole or in 
// part, without the written consent of AsNet Co., Ltd.
///////////////////////////////////////////////////////////////////////////////
// Author: Canh Doan
///////////////////////////////////////////////////////////////////////////////

#include "package.h"

///////////////////////////////////////////////////////////////////////////////

HeightMap::HeightMap(void) :
 m_nSize(0),
 m_nGridSpacing(0),
 m_fVerticalScale(0.0f),
 m_pHeightMap(NULL)
{
}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::Construct(void)
{

}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::Terminal(void)
{
	m_nSize = 0;
	m_nGridSpacing = 0;
	m_fVerticalScale = 0.0f;

	if (m_pHeightMap)
		delete m_pHeightMap;
	m_pHeightMap = NULL;
}

///////////////////////////////////////////////////////////////////////////////

float HeightMap::GetHeightAt(float &fX, float &fZ)
{
	return 0.0;
}

///////////////////////////////////////////////////////////////////////////////

float HeightMap::GetHeightAtIndex(int &nX, int &nZ)
{
	return 0.0f;
}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::GetNormalAt(float &fX, float &fZ, vec3 &vNormal)
{
	vNormal.x = 0.0f;
	vNormal.y = 0.0f;
	vNormal.z = 0.0f;
}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::GetNormalAtIndex(int &nX, int &nZ, vec3 &vNormal)
{
	vNormal.x = 0.0f;
	vNormal.y = 0.0f;
	vNormal.z = 0.0f;
}

///////////////////////////////////////////////////////////////////////////////

float HeightMap::GetHeightAtIndex(int &nX, int &nZ)
{
	return 0.0f;
}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::GenerationDiamondSquareFractal(void)
{

}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::Blur(void)
{

}

///////////////////////////////////////////////////////////////////////////////

void HeightMap::Smooth(void)
{
	
}

///////////////////////////////////////////////////////////////////////////////
